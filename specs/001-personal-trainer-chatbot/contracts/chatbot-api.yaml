openapi: 3.0.3
info:
  title: AI Personal Trainer Chatbot API
  description: API for interacting with the AI personal trainer chatbot
  version: 1.0.0
servers:
  - url: /api/v1
    description: API v1 endpoint

paths:
  /conversations:
    get:
      summary: List user's conversations
      operationId: listConversations
      tags:
        - Conversations
      security:
        - sessionAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: List of conversations
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversations:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConversationSummary'
                  total:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      summary: Create a new conversation
      operationId: createConversation
      tags:
        - Conversations
      security:
        - sessionAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  maxLength: 200
      responses:
        '201':
          description: Conversation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /conversations/{conversationId}:
    get:
      summary: Get conversation details with messages
      operationId: getConversation
      tags:
        - Conversations
      security:
        - sessionAuth: []
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Conversation details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationWithMessages'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete a conversation
      operationId: deleteConversation
      tags:
        - Conversations
      security:
        - sessionAuth: []
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Conversation deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /conversations/{conversationId}/messages:
    post:
      summary: Send a message to the chatbot
      operationId: sendMessage
      tags:
        - Messages
      security:
        - sessionAuth: []
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  maxLength: 10000
                  description: User's message to the chatbot
      responses:
        '200':
          description: Chatbot response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatbotResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'

  /conversations/{conversationId}/messages/stream:
    post:
      summary: Send a message with streaming response
      operationId: sendMessageStream
      tags:
        - Messages
      security:
        - sessionAuth: []
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  maxLength: 10000
      responses:
        '200':
          description: Server-sent event stream
          content:
            text/event-stream:
              schema:
                type: string
                format: event-stream
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/ws:
    get:
      summary: WebSocket endpoint for real-time chat
      operationId: chatWebSocket
      tags:
        - WebSocket
      security:
        - sessionAuth: []
      responses:
        '101':
          description: Switching Protocols to WebSocket
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  schemas:
    ConversationSummary:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        updated_at:
          type: string
          format: date-time
        is_active:
          type: boolean
        message_count:
          type: integer

    Conversation:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        title:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        is_active:
          type: boolean
        context_summary:
          type: string

    ConversationWithMessages:
      allOf:
        - $ref: '#/components/schemas/Conversation'
        - type: object
          properties:
            messages:
              type: array
              items:
                $ref: '#/components/schemas/ChatMessage'

    ChatMessage:
      type: object
      properties:
        id:
          type: integer
        conversation_id:
          type: integer
        message_type:
          type: string
          enum: [user, assistant]
        content:
          type: string
        created_at:
          type: string
          format: date-time
        token_count:
          type: integer
        error_message:
          type: string
        query_executed:
          type: string
        execution_time_ms:
          type: integer
        visualizations:
          type: array
          items:
            $ref: '#/components/schemas/MessageVisualization'

    MessageVisualization:
      type: object
      properties:
        id:
          type: integer
        chart_type:
          type: string
          enum: [line, bar, scatter, pie, heatmap]
        chart_config:
          type: object
          description: ECharts configuration object
        data_query:
          type: string
        created_at:
          type: string
          format: date-time

    ChatbotResponse:
      type: object
      properties:
        user_message:
          $ref: '#/components/schemas/ChatMessage'
        assistant_message:
          $ref: '#/components/schemas/ChatMessage'
        conversation:
          $ref: '#/components/schemas/Conversation'

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object

  responses:
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    RateLimited:
      description: Too many requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: session