package components

type ChatResponse struct {
	Question string
	Answer   string
	// CompletionID is the ID of the completion that is being streamed. If it's not given, we don't start streaming.
	CompletionID string
}

templ ActiveChatResponse(chatResponse ChatResponse) {
	<div>
		<span class="font-semibold">Detective:</span>
		<span>
			{ chatResponse.Question }
		</span>
	</div>
	<img
		class="h-12 aspect-square rounded-full"
		alt=""
		src="https://myrjola.twic.pics/sheerluck/adolphe_le-bon.webp?twic=v1/max=48"
		loading="lazy"
	/>
	if chatResponse.CompletionID == "" {
		<div>
			<span class="font-semibold">Adolphe:</span>
			<span>
				{ chatResponse.Answer }
			</span>
		</div>
	} else {
		<div id={ "chat-streaming-content-" + chatResponse.CompletionID }>
			<span class="font-semibold">Adolphe: </span>
		</div>
		// This listener is closed after the stream completes using hx-swap-oob.
		<div
			id={ "chat-listener-" + chatResponse.CompletionID }
			hx-ext="sse"
			sse-connect={ "/completions/stream/" + chatResponse.CompletionID }
			sse-swap="message"
			hx-swap="beforeend"
			hx-target={ "#chat-streaming-content-" + chatResponse.CompletionID }
		></div>
	}
}

templ ChatResponses(chatResponses []ChatResponse) {
	for _, chatResponse := range chatResponses {
		@ActiveChatResponse(chatResponse)
	}
}
