{{- /*gotype: github.com/myrjola/petrapp/cmd/web.exerciseInfoTemplateData*/ -}}

{{ define "page" }}
    <main>
        <style {{ nonce }}>
            @scope {
                :scope {
                    margin: var(--size-4);
                    display: flex;
                    flex-direction: column;
                    gap: var(--size-6);
                }
            }
        </style>

        <header>
            <style {{ nonce }}>
                @scope {
                    :scope {
                        display: flex;
                        gap: var(--size-3);
                        align-items: center;

                        a {
                            color: var(--gray-7);
                            text-decoration: none;
                            display: flex;
                            align-items: center;
                            gap: var(--size-2);
                            padding: var(--size-2);
                            border-radius: var(--radius-2);

                            &:hover {
                                background: var(--gray-1);
                            }
                        }

                        h1 {
                            font-size: var(--font-size-4);
                            font-weight: var(--font-weight-6);
                            view-transition-name: exercise-title-{{ .Exercise.ID }};
                        }

                        .admin-edit {
                            margin-left: auto;
                            background: var(--yellow-2);
                            color: var(--yellow-8);
                            padding: var(--size-1) var(--size-3);
                            border-radius: var(--radius-2);
                            font-size: var(--font-size-0);
                            font-weight: var(--font-weight-6);

                            &:hover {
                                background: var(--yellow-3);
                            }
                        }
                    }
                }
            </style>
            <a href="/workouts/{{ .Date.Format "2006-01-02" }}/exercises/{{ .Exercise.ID }}" data-back-button>
                ‚Üê Back
            </a>
            <h1>{{ .Exercise.Name }}</h1>
            {{ if .IsAdmin }}
                <a href="/admin/exercises/{{ .Exercise.ID }}" class="admin-edit">Edit Exercise</a>
            {{ end }}
        </header>

        <div class="exercise-info">
            <style {{ nonce }}>
                @scope {
                    :scope {
                        display: flex;
                        flex-direction: column;
                        gap: var(--size-5);

                        .section {
                            display: flex;
                            flex-direction: column;
                            gap: var(--size-2);
                        }

                        .section-title {
                            font-weight: var(--font-weight-6);
                            color: var(--gray-8);
                            font-size: var(--font-size-2);
                        }

                        .muscle-groups {
                            display: flex;
                            flex-wrap: wrap;
                            gap: var(--size-2);
                        }

                        .muscle-group {
                            background: var(--gray-1);
                            border-radius: var(--radius-2);
                            padding: var(--size-1) var(--size-2);
                            font-size: var(--font-size-1);
                            color: var(--gray-7);
                        }

                        .primary {
                            background: var(--sky-1);
                            color: var(--sky-8);
                        }

                        .category-badge {
                            display: inline-flex;
                            align-items: center;
                            justify-content: center;
                            background: var(--lime-1);
                            color: var(--lime-8);
                            border-radius: var(--radius-2);
                            padding: var(--size-1) var(--size-2);
                            font-size: var(--font-size-1);
                            font-weight: var(--font-weight-5);
                            align-self: flex-start;
                        }
                    }
                }
            </style>

            <div class="section">
                <div class="section-title">Category</div>
                <div class="category-badge">
                    {{ if eq .Exercise.Category "full_body" }}
                        Full Body
                    {{ else if eq .Exercise.Category "upper" }}
                        Upper Body
                    {{ else if eq .Exercise.Category "lower" }}
                        Lower Body
                    {{ else }}
                        {{ .Exercise.Category }}
                    {{ end }}
                </div>
            </div>

            <div class="section">
                <div class="section-title">Primary Muscle Groups</div>
                <div class="muscle-groups">
                    {{ range .Exercise.PrimaryMuscleGroups }}
                        <span class="muscle-group primary">{{ . }}</span>
                    {{ end }}
                </div>
            </div>

            {{ if .Exercise.SecondaryMuscleGroups }}
                <div class="section">
                    <div class="section-title">Secondary Muscle Groups</div>
                    <div class="muscle-groups">
                        {{ range .Exercise.SecondaryMuscleGroups }}
                            <span class="muscle-group">{{ . }}</span>
                        {{ end }}
                    </div>
                </div>
            {{ end }}

            <div class="section">
                {{ mdToHTML .Exercise.DescriptionMarkdown }}
            </div>
        </div>

        <div class="progress-chart">
            <style {{ nonce }}>
                @scope {
                    :scope {
                        margin-top: var(--size-6);
                        display: flex;
                        flex-direction: column;
                        gap: var(--size-3);
                    }

                    .section-title {
                        font-weight: var(--font-weight-6);
                        color: var(--gray-8);
                        font-size: var(--font-size-2);
                    }

                    .chart-container {
                        width: 100%;
                        height: 300px;
                        border: 1px solid var(--gray-3);
                        border-radius: var(--radius-3);
                        background: var(--gray-0);
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        color: var(--gray-6);
                        font-size: var(--font-size-1);
                    }

                    .chart-loading {
                        display: flex;
                        align-items: center;
                        gap: var(--size-2);
                    }
                }
            </style>

            <div class="section-title">Progress Chart</div>
            <div class="chart-container" id="progress-chart">
                <div class="chart-loading">
                    <span>Loading chart...</span>
                </div>
            </div>
        </div>

        <script {{ nonce }}>
          const chartContainer = document.getElementById('progress-chart');
          const dataUrl = "/workouts/{{ .Date.Format "2006-01-02" }}/exercises/{{ .Exercise.ID }}/progress-chart";

          // Load ECharts and chart data
          async function loadExerciseChart() {
            try {
              const [echarts, response] = await Promise.all([
                import("echarts"),
                fetch(dataUrl)
              ]);

              const dataset = await response.json();

              // Create ECharts option from dataset
              const option = {
                title: {
                  text: dataset.exercise_name + ' Progress'
                },
                tooltip: {
                  trigger: 'axis',
                  formatter: function (params) {
                    const point = params[0];
                    const dataPoint = dataset.data_points[point.dataIndex];
                    return dataPoint.date + '<br>' +
                      dataPoint.max_weight + ' kg<br>' +
                      'Sets:<br>' + dataPoint.sets;
                  }
                },
                xAxis: {
                  type: 'category',
                  data: dataset.data_points.map(d => d.date),
                  inverse: true
                },
                yAxis: {
                  type: 'value',
                  name: 'Weight (kg)'
                },
                series: [{
                  name: 'Max Weight (kg)',
                  type: 'line',
                  data: dataset.data_points.map(d => d.max_weight),
                  symbolSize: 6,
                  lineStyle: {
                    color: '#0ea5e9'
                  },
                  itemStyle: {
                    color: '#0ea5e9'
                  }
                }]
              };

              // Initialize chart
              const chart = echarts.init(chartContainer);
              chart.setOption(option);

              // Handle window resize
              window.addEventListener('resize', () => {
                chart.resize();
              });

            } catch (error) {
              console.error('Error loading chart:', error);
              chartContainer.innerHTML = '<div class="chart-loading">Failed to load chart</div>';
            }
          }

          loadExerciseChart();
        </script>
    </main>
{{ end }}
